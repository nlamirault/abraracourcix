// Code generated by protoc-gen-go. DO NOT EDIT.
// source: urls.proto

/*
Package v2beta is a generated protocol buffer package.

It is generated from these files:
	urls.proto

It has these top-level messages:
	Url
	GetUrlsRequest
	GetUrlsResponse
	GetUrlRequest
	GetUrlResponse
	CreateUrlRequest
	CreateUrlResponse
*/
package v2beta

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Url struct {
	Key      string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Link     string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	Creation string `protobuf:"bytes,3,opt,name=creation" json:"creation,omitempty"`
}

func (m *Url) Reset()                    { *m = Url{} }
func (m *Url) String() string            { return proto.CompactTextString(m) }
func (*Url) ProtoMessage()               {}
func (*Url) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Url) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Url) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Url) GetCreation() string {
	if m != nil {
		return m.Creation
	}
	return ""
}

type GetUrlsRequest struct {
}

func (m *GetUrlsRequest) Reset()                    { *m = GetUrlsRequest{} }
func (m *GetUrlsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUrlsRequest) ProtoMessage()               {}
func (*GetUrlsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetUrlsResponse struct {
	Urls []*Url `protobuf:"bytes,1,rep,name=Urls" json:"Urls,omitempty"`
}

func (m *GetUrlsResponse) Reset()                    { *m = GetUrlsResponse{} }
func (m *GetUrlsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUrlsResponse) ProtoMessage()               {}
func (*GetUrlsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUrlsResponse) GetUrls() []*Url {
	if m != nil {
		return m.Urls
	}
	return nil
}

type GetUrlRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *GetUrlRequest) Reset()                    { *m = GetUrlRequest{} }
func (m *GetUrlRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUrlRequest) ProtoMessage()               {}
func (*GetUrlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetUrlRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetUrlResponse struct {
	Url *Url `protobuf:"bytes,1,opt,name=Url" json:"Url,omitempty"`
}

func (m *GetUrlResponse) Reset()                    { *m = GetUrlResponse{} }
func (m *GetUrlResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUrlResponse) ProtoMessage()               {}
func (*GetUrlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetUrlResponse) GetUrl() *Url {
	if m != nil {
		return m.Url
	}
	return nil
}

type CreateUrlRequest struct {
	Link string `protobuf:"bytes,1,opt,name=link" json:"link,omitempty"`
}

func (m *CreateUrlRequest) Reset()                    { *m = CreateUrlRequest{} }
func (m *CreateUrlRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUrlRequest) ProtoMessage()               {}
func (*CreateUrlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateUrlRequest) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type CreateUrlResponse struct {
	Url *Url `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *CreateUrlResponse) Reset()                    { *m = CreateUrlResponse{} }
func (m *CreateUrlResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateUrlResponse) ProtoMessage()               {}
func (*CreateUrlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateUrlResponse) GetUrl() *Url {
	if m != nil {
		return m.Url
	}
	return nil
}

func init() {
	proto.RegisterType((*Url)(nil), "v2beta.Url")
	proto.RegisterType((*GetUrlsRequest)(nil), "v2beta.GetUrlsRequest")
	proto.RegisterType((*GetUrlsResponse)(nil), "v2beta.GetUrlsResponse")
	proto.RegisterType((*GetUrlRequest)(nil), "v2beta.GetUrlRequest")
	proto.RegisterType((*GetUrlResponse)(nil), "v2beta.GetUrlResponse")
	proto.RegisterType((*CreateUrlRequest)(nil), "v2beta.CreateUrlRequest")
	proto.RegisterType((*CreateUrlResponse)(nil), "v2beta.CreateUrlResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UrlService service

type UrlServiceClient interface {
	// List returns all available Urls
	List(ctx context.Context, in *GetUrlsRequest, opts ...grpc.CallOption) (*GetUrlsResponse, error)
	// Create creates a new Url
	Create(ctx context.Context, in *CreateUrlRequest, opts ...grpc.CallOption) (*CreateUrlResponse, error)
	// Get return a Url
	Get(ctx context.Context, in *GetUrlRequest, opts ...grpc.CallOption) (*GetUrlResponse, error)
}

type urlServiceClient struct {
	cc *grpc.ClientConn
}

func NewUrlServiceClient(cc *grpc.ClientConn) UrlServiceClient {
	return &urlServiceClient{cc}
}

func (c *urlServiceClient) List(ctx context.Context, in *GetUrlsRequest, opts ...grpc.CallOption) (*GetUrlsResponse, error) {
	out := new(GetUrlsResponse)
	err := grpc.Invoke(ctx, "/v2beta.UrlService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *urlServiceClient) Create(ctx context.Context, in *CreateUrlRequest, opts ...grpc.CallOption) (*CreateUrlResponse, error) {
	out := new(CreateUrlResponse)
	err := grpc.Invoke(ctx, "/v2beta.UrlService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *urlServiceClient) Get(ctx context.Context, in *GetUrlRequest, opts ...grpc.CallOption) (*GetUrlResponse, error) {
	out := new(GetUrlResponse)
	err := grpc.Invoke(ctx, "/v2beta.UrlService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UrlService service

type UrlServiceServer interface {
	// List returns all available Urls
	List(context.Context, *GetUrlsRequest) (*GetUrlsResponse, error)
	// Create creates a new Url
	Create(context.Context, *CreateUrlRequest) (*CreateUrlResponse, error)
	// Get return a Url
	Get(context.Context, *GetUrlRequest) (*GetUrlResponse, error)
}

func RegisterUrlServiceServer(s *grpc.Server, srv UrlServiceServer) {
	s.RegisterService(&_UrlService_serviceDesc, srv)
}

func _UrlService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUrlsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UrlServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2beta.UrlService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UrlServiceServer).List(ctx, req.(*GetUrlsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UrlService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UrlServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2beta.UrlService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UrlServiceServer).Create(ctx, req.(*CreateUrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UrlService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UrlServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2beta.UrlService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UrlServiceServer).Get(ctx, req.(*GetUrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UrlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v2beta.UrlService",
	HandlerType: (*UrlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _UrlService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UrlService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UrlService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "urls.proto",
}

func init() { proto.RegisterFile("urls.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x92, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x49, 0x53, 0x8a, 0xde, 0x6a, 0x6d, 0x2f, 0xb5, 0x8d, 0x41, 0xb1, 0xce, 0x42, 0x8a,
	0x8b, 0x0e, 0xc4, 0x9d, 0x5b, 0x17, 0xdd, 0x28, 0x48, 0x25, 0xee, 0xd3, 0x72, 0x29, 0xa1, 0x43,
	0xa6, 0xce, 0x4c, 0x0a, 0x45, 0xdc, 0x08, 0x3e, 0x81, 0x8f, 0xe6, 0x2b, 0xf8, 0x20, 0x92, 0x49,
	0xd2, 0x5f, 0xdd, 0xcd, 0x9c, 0x39, 0xf7, 0x9b, 0x73, 0x92, 0x01, 0x48, 0x95, 0xd0, 0x83, 0xb9,
	0x92, 0x46, 0x62, 0x6d, 0x11, 0x8c, 0xc9, 0x44, 0xfe, 0xf9, 0x54, 0xca, 0xa9, 0x20, 0x1e, 0xcd,
	0x63, 0x1e, 0x25, 0x89, 0x34, 0x91, 0x89, 0x65, 0x52, 0xb8, 0xd8, 0x10, 0xdc, 0x50, 0x09, 0x6c,
	0x82, 0x3b, 0xa3, 0xa5, 0xe7, 0xf4, 0x9c, 0xfe, 0xe1, 0x28, 0x5b, 0x22, 0x42, 0x55, 0xc4, 0xc9,
	0xcc, 0xab, 0x58, 0xc9, 0xae, 0xd1, 0x87, 0x83, 0x89, 0x22, 0x3b, 0xef, 0xb9, 0x56, 0x5f, 0xed,
	0x59, 0x13, 0x1a, 0x43, 0x32, 0xa1, 0x12, 0x7a, 0x44, 0xaf, 0x29, 0x69, 0xc3, 0x02, 0x38, 0x59,
	0x29, 0x7a, 0x2e, 0x13, 0x4d, 0x78, 0x09, 0xd5, 0x6c, 0xef, 0x39, 0x3d, 0xb7, 0x5f, 0x0f, 0xea,
	0x83, 0x3c, 0xe2, 0x20, 0x54, 0x62, 0x64, 0x0f, 0xd8, 0x15, 0x1c, 0xe7, 0x33, 0x05, 0x64, 0x3f,
	0x18, 0xe3, 0xe5, 0x45, 0x2b, 0xea, 0x85, 0xed, 0x60, 0x3d, 0x3b, 0xd0, 0x4c, 0x67, 0xd7, 0xd0,
	0xbc, 0xcf, 0x52, 0xd2, 0x06, 0xb6, 0x6c, 0xe7, 0xac, 0xdb, 0xb1, 0x00, 0x5a, 0x1b, 0xbe, 0x35,
	0x3b, 0xfd, 0x87, 0x9d, 0x2a, 0x11, 0x7c, 0x56, 0x00, 0x42, 0x25, 0x9e, 0x49, 0x2d, 0xe2, 0x09,
	0xe1, 0x23, 0x54, 0x1f, 0x62, 0x6d, 0xb0, 0x53, 0x1a, 0xb7, 0x3f, 0x89, 0xdf, 0xdd, 0xd3, 0xf3,
	0x6b, 0x58, 0xfb, 0xe3, 0xfb, 0xe7, 0xab, 0xd2, 0xc0, 0x23, 0x9e, 0x1b, 0x78, 0xf6, 0x23, 0xf1,
	0x05, 0x6a, 0x79, 0x22, 0xf4, 0xca, 0xc1, 0xdd, 0x26, 0xfe, 0xd9, 0x1f, 0x27, 0x05, 0xb4, 0x6b,
	0xa1, 0x2d, 0xb6, 0x05, 0xbd, 0x73, 0x6e, 0xf0, 0x09, 0xdc, 0x21, 0x19, 0x3c, 0xdd, 0x4e, 0x53,
	0x12, 0x3b, 0xbb, 0x72, 0x81, 0xf3, 0x2d, 0xae, 0x8d, 0xb8, 0x89, 0xe3, 0x6f, 0x33, 0x5a, 0xbe,
	0x8f, 0x6b, 0xf6, 0x35, 0xdd, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x50, 0xe5, 0x96, 0x81,
	0x02, 0x00, 0x00,
}
